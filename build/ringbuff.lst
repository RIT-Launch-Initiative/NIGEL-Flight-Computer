ARM GAS  /tmp/ccSwwPub.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ringbuff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.rb_init,"ax",%progbits
  18              		.align	1
  19              		.global	rb_init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	rb_init:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "source/modules/ringbuff/ringbuff.c"
   1:source/modules/ringbuff/ringbuff.c **** #include <stdint.h>
   2:source/modules/ringbuff/ringbuff.c **** #include <stdlib.h>
   3:source/modules/ringbuff/ringbuff.c **** #include "ringbuff.h"
   4:source/modules/ringbuff/ringbuff.c **** 
   5:source/modules/ringbuff/ringbuff.c **** void rb_init(ringbuff_t* rb, uint8_t* buff, size_t size, uint8_t overwrite_enable) {
  30              		.loc 1 5 84 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 5 84 is_stmt 0 view .LVU1
  36 0000 10B4     		push	{r4}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 4, -4
   6:source/modules/ringbuff/ringbuff.c ****     rb->head = 0;
  40              		.loc 1 6 5 is_stmt 1 view .LVU2
  41              		.loc 1 6 14 is_stmt 0 view .LVU3
  42 0002 0024     		movs	r4, #0
  43 0004 0460     		str	r4, [r0]
   7:source/modules/ringbuff/ringbuff.c ****     rb->tail = 0;
  44              		.loc 1 7 5 is_stmt 1 view .LVU4
  45              		.loc 1 7 14 is_stmt 0 view .LVU5
  46 0006 4460     		str	r4, [r0, #4]
   8:source/modules/ringbuff/ringbuff.c ****     rb->ptr = buff;
  47              		.loc 1 8 5 is_stmt 1 view .LVU6
  48              		.loc 1 8 13 is_stmt 0 view .LVU7
  49 0008 8160     		str	r1, [r0, #8]
   9:source/modules/ringbuff/ringbuff.c ****     rb->max = size;
ARM GAS  /tmp/ccSwwPub.s 			page 2


  50              		.loc 1 9 5 is_stmt 1 view .LVU8
  51              		.loc 1 9 13 is_stmt 0 view .LVU9
  52 000a C260     		str	r2, [r0, #12]
  10:source/modules/ringbuff/ringbuff.c ****     rb->len = 0;
  53              		.loc 1 10 5 is_stmt 1 view .LVU10
  54              		.loc 1 10 13 is_stmt 0 view .LVU11
  55 000c 0461     		str	r4, [r0, #16]
  11:source/modules/ringbuff/ringbuff.c ****     rb->overwrite_enable = overwrite_enable;
  56              		.loc 1 11 5 is_stmt 1 view .LVU12
  57              		.loc 1 11 26 is_stmt 0 view .LVU13
  58 000e 0375     		strb	r3, [r0, #20]
  12:source/modules/ringbuff/ringbuff.c **** }
  59              		.loc 1 12 1 view .LVU14
  60 0010 5DF8044B 		ldr	r4, [sp], #4
  61              	.LCFI1:
  62              		.cfi_restore 4
  63              		.cfi_def_cfa_offset 0
  64 0014 7047     		bx	lr
  65              		.cfi_endproc
  66              	.LFE0:
  68              		.section	.text.rb_memcpyin,"ax",%progbits
  69              		.align	1
  70              		.global	rb_memcpyin
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv4-sp-d16
  76              	rb_memcpyin:
  77              	.LVL1:
  78              	.LFB1:
  13:source/modules/ringbuff/ringbuff.c **** 
  14:source/modules/ringbuff/ringbuff.c **** 
  15:source/modules/ringbuff/ringbuff.c **** size_t rb_memcpyin(ringbuff_t* rb, uint8_t* buff, size_t len) {
  79              		.loc 1 15 63 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		.loc 1 15 63 is_stmt 0 view .LVU16
  84 0000 10B5     		push	{r4, lr}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
  89 0002 8446     		mov	ip, r0
  16:source/modules/ringbuff/ringbuff.c ****     // if we will overwrite head, move it to one after what we will write
  17:source/modules/ringbuff/ringbuff.c ****     if((len + rb->tail) % rb->max > rb->head) {
  90              		.loc 1 17 5 is_stmt 1 view .LVU17
  91              		.loc 1 17 17 is_stmt 0 view .LVU18
  92 0004 4368     		ldr	r3, [r0, #4]
  93              		.loc 1 17 13 view .LVU19
  94 0006 1344     		add	r3, r3, r2
  95              		.loc 1 17 29 view .LVU20
  96 0008 C068     		ldr	r0, [r0, #12]
  97              	.LVL2:
  98              		.loc 1 17 25 view .LVU21
  99 000a B3FBF0F4 		udiv	r4, r3, r0
 100 000e 00FB1433 		mls	r3, r0, r4, r3
ARM GAS  /tmp/ccSwwPub.s 			page 3


 101              		.loc 1 17 39 view .LVU22
 102 0012 DCF80000 		ldr	r0, [ip]
 103              		.loc 1 17 7 view .LVU23
 104 0016 8342     		cmp	r3, r0
 105 0018 04D9     		bls	.L4
  18:source/modules/ringbuff/ringbuff.c ****         if(rb->overwrite_enable) {
 106              		.loc 1 18 9 is_stmt 1 view .LVU24
 107              		.loc 1 18 14 is_stmt 0 view .LVU25
 108 001a 9CF81400 		ldrb	r0, [ip, #20]	@ zero_extendqisi2
 109              		.loc 1 18 11 view .LVU26
 110 001e F8B1     		cbz	r0, .L8
  19:source/modules/ringbuff/ringbuff.c ****             rb->head = (len + rb->tail) % rb->max;
 111              		.loc 1 19 13 is_stmt 1 view .LVU27
 112              		.loc 1 19 22 is_stmt 0 view .LVU28
 113 0020 CCF80030 		str	r3, [ip]
 114              	.L4:
  15:source/modules/ringbuff/ringbuff.c ****     // if we will overwrite head, move it to one after what we will write
 115              		.loc 1 15 63 view .LVU29
 116 0024 0020     		movs	r0, #0
 117 0026 13E0     		b	.L6
 118              	.LVL3:
 119              	.L7:
  20:source/modules/ringbuff/ringbuff.c ****         } else {
  21:source/modules/ringbuff/ringbuff.c ****             return 0;
  22:source/modules/ringbuff/ringbuff.c ****         }
  23:source/modules/ringbuff/ringbuff.c ****     }
  24:source/modules/ringbuff/ringbuff.c **** 
  25:source/modules/ringbuff/ringbuff.c ****     size_t i = 0;
  26:source/modules/ringbuff/ringbuff.c ****     while(i < len) {
  27:source/modules/ringbuff/ringbuff.c ****         rb->ptr[rb->tail] = buff[i];
 120              		.loc 1 27 9 is_stmt 1 view .LVU30
 121              		.loc 1 27 11 is_stmt 0 view .LVU31
 122 0028 DCF80840 		ldr	r4, [ip, #8]
 123              		.loc 1 27 19 view .LVU32
 124 002c DCF80430 		ldr	r3, [ip, #4]
 125              		.loc 1 27 33 view .LVU33
 126 0030 11F800E0 		ldrb	lr, [r1, r0]	@ zero_extendqisi2
 127              		.loc 1 27 27 view .LVU34
 128 0034 04F803E0 		strb	lr, [r4, r3]
  28:source/modules/ringbuff/ringbuff.c ****         i++;
 129              		.loc 1 28 9 is_stmt 1 view .LVU35
 130              		.loc 1 28 10 is_stmt 0 view .LVU36
 131 0038 0130     		adds	r0, r0, #1
 132              	.LVL4:
  29:source/modules/ringbuff/ringbuff.c ****         rb->tail = (rb->tail + 1) % rb->max;
 133              		.loc 1 29 9 is_stmt 1 view .LVU37
 134              		.loc 1 29 23 is_stmt 0 view .LVU38
 135 003a DCF80430 		ldr	r3, [ip, #4]
 136              		.loc 1 29 30 view .LVU39
 137 003e 0133     		adds	r3, r3, #1
 138              		.loc 1 29 39 view .LVU40
 139 0040 DCF80C40 		ldr	r4, [ip, #12]
 140              		.loc 1 29 35 view .LVU41
 141 0044 B3FBF4FE 		udiv	lr, r3, r4
 142 0048 04FB1E33 		mls	r3, r4, lr, r3
 143              		.loc 1 29 18 view .LVU42
 144 004c CCF80430 		str	r3, [ip, #4]
ARM GAS  /tmp/ccSwwPub.s 			page 4


 145              	.LVL5:
 146              	.L6:
  26:source/modules/ringbuff/ringbuff.c ****         rb->ptr[rb->tail] = buff[i];
 147              		.loc 1 26 13 is_stmt 1 view .LVU43
 148 0050 9042     		cmp	r0, r2
 149 0052 E9D3     		bcc	.L7
  30:source/modules/ringbuff/ringbuff.c ****     }
  31:source/modules/ringbuff/ringbuff.c **** 
  32:source/modules/ringbuff/ringbuff.c ****     rb->len += i;
 150              		.loc 1 32 5 view .LVU44
 151              		.loc 1 32 13 is_stmt 0 view .LVU45
 152 0054 DCF81030 		ldr	r3, [ip, #16]
 153 0058 0344     		add	r3, r3, r0
 154 005a CCF81030 		str	r3, [ip, #16]
  33:source/modules/ringbuff/ringbuff.c ****     return i;
 155              		.loc 1 33 5 is_stmt 1 view .LVU46
 156              	.LVL6:
 157              	.L3:
  34:source/modules/ringbuff/ringbuff.c **** }
 158              		.loc 1 34 1 is_stmt 0 view .LVU47
 159 005e 10BD     		pop	{r4, pc}
 160              	.L8:
  21:source/modules/ringbuff/ringbuff.c ****         }
 161              		.loc 1 21 20 view .LVU48
 162 0060 0020     		movs	r0, #0
 163 0062 FCE7     		b	.L3
 164              		.cfi_endproc
 165              	.LFE1:
 167              		.section	.text.rb_memcpyout,"ax",%progbits
 168              		.align	1
 169              		.global	rb_memcpyout
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	rb_memcpyout:
 176              	.LVL7:
 177              	.LFB2:
  35:source/modules/ringbuff/ringbuff.c **** 
  36:source/modules/ringbuff/ringbuff.c **** size_t rb_memcpyout(uint8_t* buff, ringbuff_t* rb, size_t len) {
 178              		.loc 1 36 64 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		.loc 1 36 64 is_stmt 0 view .LVU50
 183 0000 10B5     		push	{r4, lr}
 184              	.LCFI3:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
 188 0002 8646     		mov	lr, r0
  37:source/modules/ringbuff/ringbuff.c ****     size_t i = 0;
 189              		.loc 1 37 5 is_stmt 1 view .LVU51
 190              	.LVL8:
  38:source/modules/ringbuff/ringbuff.c ****     while(i < len) {
 191              		.loc 1 38 5 view .LVU52
  37:source/modules/ringbuff/ringbuff.c ****     size_t i = 0;
ARM GAS  /tmp/ccSwwPub.s 			page 5


 192              		.loc 1 37 12 is_stmt 0 view .LVU53
 193 0004 0020     		movs	r0, #0
 194              	.LVL9:
 195              	.L11:
 196              		.loc 1 38 13 is_stmt 1 view .LVU54
 197 0006 9042     		cmp	r0, r2
 198 0008 14D2     		bcs	.L15
  39:source/modules/ringbuff/ringbuff.c ****         buff[i] = rb->ptr[rb->head];
 199              		.loc 1 39 9 view .LVU55
 200              		.loc 1 39 21 is_stmt 0 view .LVU56
 201 000a 8C68     		ldr	r4, [r1, #8]
 202              		.loc 1 39 29 view .LVU57
 203 000c 0B68     		ldr	r3, [r1]
 204              		.loc 1 39 26 view .LVU58
 205 000e E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 206              		.loc 1 39 17 view .LVU59
 207 0010 0EF80030 		strb	r3, [lr, r0]
  40:source/modules/ringbuff/ringbuff.c ****         i++;
 208              		.loc 1 40 9 is_stmt 1 view .LVU60
 209              		.loc 1 40 10 is_stmt 0 view .LVU61
 210 0014 0130     		adds	r0, r0, #1
 211              	.LVL10:
  41:source/modules/ringbuff/ringbuff.c ****         rb->head = (rb->head + 1) % rb->max;
 212              		.loc 1 41 9 is_stmt 1 view .LVU62
 213              		.loc 1 41 23 is_stmt 0 view .LVU63
 214 0016 0B68     		ldr	r3, [r1]
 215              		.loc 1 41 30 view .LVU64
 216 0018 0133     		adds	r3, r3, #1
 217              		.loc 1 41 39 view .LVU65
 218 001a CC68     		ldr	r4, [r1, #12]
 219              		.loc 1 41 35 view .LVU66
 220 001c B3FBF4FC 		udiv	ip, r3, r4
 221 0020 04FB1C33 		mls	r3, r4, ip, r3
 222              		.loc 1 41 18 view .LVU67
 223 0024 0B60     		str	r3, [r1]
  42:source/modules/ringbuff/ringbuff.c ****         if(rb->head == rb->tail) {
 224              		.loc 1 42 9 is_stmt 1 view .LVU68
 225              		.loc 1 42 26 is_stmt 0 view .LVU69
 226 0026 4C68     		ldr	r4, [r1, #4]
 227              		.loc 1 42 11 view .LVU70
 228 0028 A342     		cmp	r3, r4
 229 002a ECD1     		bne	.L11
  43:source/modules/ringbuff/ringbuff.c ****             rb->len -= i;
 230              		.loc 1 43 13 is_stmt 1 view .LVU71
 231              		.loc 1 43 21 is_stmt 0 view .LVU72
 232 002c 0B69     		ldr	r3, [r1, #16]
 233 002e 1B1A     		subs	r3, r3, r0
 234 0030 0B61     		str	r3, [r1, #16]
  44:source/modules/ringbuff/ringbuff.c ****             return i;
 235              		.loc 1 44 13 is_stmt 1 view .LVU73
 236              		.loc 1 44 20 is_stmt 0 view .LVU74
 237 0032 02E0     		b	.L10
 238              	.L15:
  45:source/modules/ringbuff/ringbuff.c ****         }
  46:source/modules/ringbuff/ringbuff.c ****     }
  47:source/modules/ringbuff/ringbuff.c **** 
  48:source/modules/ringbuff/ringbuff.c ****     rb->len -= i;
ARM GAS  /tmp/ccSwwPub.s 			page 6


 239              		.loc 1 48 5 is_stmt 1 view .LVU75
 240              		.loc 1 48 13 is_stmt 0 view .LVU76
 241 0034 0B69     		ldr	r3, [r1, #16]
 242 0036 1B1A     		subs	r3, r3, r0
 243 0038 0B61     		str	r3, [r1, #16]
  49:source/modules/ringbuff/ringbuff.c ****     return i;
 244              		.loc 1 49 5 is_stmt 1 view .LVU77
 245              	.L10:
  50:source/modules/ringbuff/ringbuff.c **** }
 246              		.loc 1 50 1 is_stmt 0 view .LVU78
 247 003a 10BD     		pop	{r4, pc}
 248              		.cfi_endproc
 249              	.LFE2:
 251              		.text
 252              	.Letext0:
 253              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 254              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 255              		.file 4 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 256              		.file 5 "source/modules/ringbuff/ringbuff.h"
ARM GAS  /tmp/ccSwwPub.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ringbuff.c
     /tmp/ccSwwPub.s:18     .text.rb_init:0000000000000000 $t
     /tmp/ccSwwPub.s:26     .text.rb_init:0000000000000000 rb_init
     /tmp/ccSwwPub.s:69     .text.rb_memcpyin:0000000000000000 $t
     /tmp/ccSwwPub.s:76     .text.rb_memcpyin:0000000000000000 rb_memcpyin
     /tmp/ccSwwPub.s:168    .text.rb_memcpyout:0000000000000000 $t
     /tmp/ccSwwPub.s:175    .text.rb_memcpyout:0000000000000000 rb_memcpyout

NO UNDEFINED SYMBOLS
