ARM GAS  /tmp/ccCSnU0r.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"gcmd.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gcmd_init,"ax",%progbits
  18              		.align	1
  19              		.global	gcmd_init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gcmd_init:
  27              	.LFB0:
  28              		.file 1 "source/modules/gcmd/gcmd.c"
   1:source/modules/gcmd/gcmd.c **** #include "gcmd.h"
   2:source/modules/gcmd/gcmd.c **** #include "gcmd_conf.h"
   3:source/modules/gcmd/gcmd.c **** #include "hashmap.h"
   4:source/modules/gcmd/gcmd.c **** 
   5:source/modules/gcmd/gcmd.c **** // current sequence number
   6:source/modules/gcmd/gcmd.c **** static uint32_t seq_num = 0;
   7:source/modules/gcmd/gcmd.c **** 
   8:source/modules/gcmd/gcmd.c **** // hashmap that maps control numbers to functions
   9:source/modules/gcmd/gcmd.c **** static hashmap_t* hm;
  10:source/modules/gcmd/gcmd.c **** 
  11:source/modules/gcmd/gcmd.c **** int gcmd_init() {
  29              		.loc 1 11 17 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  12:source/modules/gcmd/gcmd.c ****     hm = hm_create(100); // TODO make this number less random?
  41              		.loc 1 12 5 view .LVU1
  42              		.loc 1 12 10 is_stmt 0 view .LVU2
  43 0004 6420     		movs	r0, #100
  44 0006 FFF7FEFF 		bl	hm_create
  45              	.LVL0:
  46              		.loc 1 12 8 view .LVU3
ARM GAS  /tmp/ccCSnU0r.s 			page 2


  47 000a 104B     		ldr	r3, .L8
  48 000c 1860     		str	r0, [r3]
  13:source/modules/gcmd/gcmd.c **** 
  14:source/modules/gcmd/gcmd.c ****     if(!hm) {
  49              		.loc 1 14 5 is_stmt 1 view .LVU4
  50              		.loc 1 14 7 is_stmt 0 view .LVU5
  51 000e B0B1     		cbz	r0, .L5
  52              	.LBB2:
  15:source/modules/gcmd/gcmd.c ****         // can't allocate memory
  16:source/modules/gcmd/gcmd.c ****         return -1;
  17:source/modules/gcmd/gcmd.c ****     }
  18:source/modules/gcmd/gcmd.c **** 
  19:source/modules/gcmd/gcmd.c ****     gcmd_entry_t entry;
  20:source/modules/gcmd/gcmd.c ****     for(size_t i = 0; i < NUM_GCMDS; i++) {
  53              		.loc 1 20 16 view .LVU6
  54 0010 0024     		movs	r4, #0
  55              	.L3:
  56              	.LVL1:
  57              		.loc 1 20 25 is_stmt 1 discriminator 1 view .LVU7
  58 0012 14B1     		cbz	r4, .L4
  59              	.LBE2:
  21:source/modules/gcmd/gcmd.c ****         entry = gcmd_list[i];
  22:source/modules/gcmd/gcmd.c ****         if(hm_add(hm, entry.control, (void*)(entry.func)) != HM_OK) {
  23:source/modules/gcmd/gcmd.c ****             // can't add
  24:source/modules/gcmd/gcmd.c ****             return -1;
  25:source/modules/gcmd/gcmd.c ****         }
  26:source/modules/gcmd/gcmd.c ****     }
  27:source/modules/gcmd/gcmd.c **** 
  28:source/modules/gcmd/gcmd.c ****     return 1;
  60              		.loc 1 28 12 is_stmt 0 view .LVU8
  61 0014 0120     		movs	r0, #1
  62              	.LVL2:
  63              	.L1:
  29:source/modules/gcmd/gcmd.c **** }
  64              		.loc 1 29 1 view .LVU9
  65 0016 02B0     		add	sp, sp, #8
  66              	.LCFI2:
  67              		.cfi_remember_state
  68              		.cfi_def_cfa_offset 8
  69              		@ sp needed
  70 0018 10BD     		pop	{r4, pc}
  71              	.LVL3:
  72              	.L4:
  73              	.LCFI3:
  74              		.cfi_restore_state
  75              	.LBB3:
  21:source/modules/gcmd/gcmd.c ****         entry = gcmd_list[i];
  76              		.loc 1 21 9 is_stmt 1 view .LVU10
  21:source/modules/gcmd/gcmd.c ****         entry = gcmd_list[i];
  77              		.loc 1 21 15 is_stmt 0 view .LVU11
  78 001a 0D4B     		ldr	r3, .L8+4
  79 001c 03EBC403 		add	r3, r3, r4, lsl #3
  80 0020 93E80300 		ldm	r3, {r0, r1}
  81 0024 02AB     		add	r3, sp, #8
  82 0026 03E90300 		stmdb	r3, {r0, r1}
  22:source/modules/gcmd/gcmd.c ****             // can't add
  83              		.loc 1 22 9 is_stmt 1 view .LVU12
ARM GAS  /tmp/ccCSnU0r.s 			page 3


  22:source/modules/gcmd/gcmd.c ****             // can't add
  84              		.loc 1 22 12 is_stmt 0 view .LVU13
  85 002a 0A46     		mov	r2, r1
  86 002c BDF80010 		ldrh	r1, [sp]
  87 0030 064B     		ldr	r3, .L8
  88 0032 1868     		ldr	r0, [r3]
  89 0034 FFF7FEFF 		bl	hm_add
  90              	.LVL4:
  22:source/modules/gcmd/gcmd.c ****             // can't add
  91              		.loc 1 22 11 view .LVU14
  92 0038 20B9     		cbnz	r0, .L6
  20:source/modules/gcmd/gcmd.c ****         entry = gcmd_list[i];
  93              		.loc 1 20 39 is_stmt 1 discriminator 2 view .LVU15
  94 003a 0134     		adds	r4, r4, #1
  95              	.LVL5:
  20:source/modules/gcmd/gcmd.c ****         entry = gcmd_list[i];
  96              		.loc 1 20 39 is_stmt 0 discriminator 2 view .LVU16
  97 003c E9E7     		b	.L3
  98              	.LVL6:
  99              	.L5:
  20:source/modules/gcmd/gcmd.c ****         entry = gcmd_list[i];
 100              		.loc 1 20 39 discriminator 2 view .LVU17
 101              	.LBE3:
  16:source/modules/gcmd/gcmd.c ****     }
 102              		.loc 1 16 16 view .LVU18
 103 003e 4FF0FF30 		mov	r0, #-1
 104 0042 E8E7     		b	.L1
 105              	.LVL7:
 106              	.L6:
 107              	.LBB4:
  24:source/modules/gcmd/gcmd.c ****         }
 108              		.loc 1 24 20 view .LVU19
 109 0044 4FF0FF30 		mov	r0, #-1
 110 0048 E5E7     		b	.L1
 111              	.L9:
 112 004a 00BF     		.align	2
 113              	.L8:
 114 004c 00000000 		.word	.LANCHOR0
 115 0050 00000000 		.word	.LANCHOR1
 116              	.LBE4:
 117              		.cfi_endproc
 118              	.LFE0:
 120              		.section	.text.gcmd_parse,"ax",%progbits
 121              		.align	1
 122              		.global	gcmd_parse
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu fpv4-sp-d16
 128              	gcmd_parse:
 129              	.LVL8:
 130              	.LFB1:
  30:source/modules/gcmd/gcmd.c **** 
  31:source/modules/gcmd/gcmd.c **** int gcmd_parse(uint8_t* buff, size_t len) {
 131              		.loc 1 31 43 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccCSnU0r.s 			page 4


 134              		@ frame_needed = 0, uses_anonymous_args = 0
  32:source/modules/gcmd/gcmd.c ****     if(len != sizeof(gcmd_t)) {
 135              		.loc 1 32 5 view .LVU21
 136              		.loc 1 32 7 is_stmt 0 view .LVU22
 137 0000 0829     		cmp	r1, #8
 138 0002 18D1     		bne	.L12
  31:source/modules/gcmd/gcmd.c ****     if(len != sizeof(gcmd_t)) {
 139              		.loc 1 31 43 view .LVU23
 140 0004 10B5     		push	{r4, lr}
 141              	.LCFI4:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
 144              		.cfi_offset 14, -4
 145 0006 0446     		mov	r4, r0
  33:source/modules/gcmd/gcmd.c ****         return -1;
  34:source/modules/gcmd/gcmd.c ****     }
  35:source/modules/gcmd/gcmd.c **** 
  36:source/modules/gcmd/gcmd.c ****     gcmd_t* cmd = (gcmd_t*)buff;
 146              		.loc 1 36 5 is_stmt 1 view .LVU24
 147              	.LVL9:
  37:source/modules/gcmd/gcmd.c **** 
  38:source/modules/gcmd/gcmd.c ****     if(cmd->seq_num != seq_num) {
 148              		.loc 1 38 5 view .LVU25
 149              		.loc 1 38 11 is_stmt 0 view .LVU26
 150 0008 0268     		ldr	r2, [r0]
 151              		.loc 1 38 21 view .LVU27
 152 000a 0E4B     		ldr	r3, .L20
 153 000c 1B68     		ldr	r3, [r3]
 154              		.loc 1 38 7 view .LVU28
 155 000e 9A42     		cmp	r2, r3
 156 0010 02D0     		beq	.L19
  39:source/modules/gcmd/gcmd.c ****         // TODO send some kind of error
  40:source/modules/gcmd/gcmd.c ****         return -1;
 157              		.loc 1 40 16 view .LVU29
 158 0012 4FF0FF30 		mov	r0, #-1
 159              	.LVL10:
 160              	.L10:
  41:source/modules/gcmd/gcmd.c ****     }
  42:source/modules/gcmd/gcmd.c **** 
  43:source/modules/gcmd/gcmd.c ****     void* f = hm_get(hm, cmd->control);
  44:source/modules/gcmd/gcmd.c **** 
  45:source/modules/gcmd/gcmd.c ****     if(f == NULL) {
  46:source/modules/gcmd/gcmd.c ****         // no such control number
  47:source/modules/gcmd/gcmd.c ****         // TODO send some kind of error
  48:source/modules/gcmd/gcmd.c ****         return -1;
  49:source/modules/gcmd/gcmd.c ****     }
  50:source/modules/gcmd/gcmd.c **** 
  51:source/modules/gcmd/gcmd.c ****     seq_num++;
  52:source/modules/gcmd/gcmd.c **** 
  53:source/modules/gcmd/gcmd.c ****     void (*func) (uint16_t) = (void (*)(uint16_t))f;
  54:source/modules/gcmd/gcmd.c ****     func(cmd->state);
  55:source/modules/gcmd/gcmd.c **** 
  56:source/modules/gcmd/gcmd.c ****     return 1;
  57:source/modules/gcmd/gcmd.c **** }
 161              		.loc 1 57 1 view .LVU30
 162 0016 10BD     		pop	{r4, pc}
 163              	.LVL11:
ARM GAS  /tmp/ccCSnU0r.s 			page 5


 164              	.L19:
  43:source/modules/gcmd/gcmd.c **** 
 165              		.loc 1 43 5 is_stmt 1 view .LVU31
  43:source/modules/gcmd/gcmd.c **** 
 166              		.loc 1 43 15 is_stmt 0 view .LVU32
 167 0018 8188     		ldrh	r1, [r0, #4]
 168              	.LVL12:
  43:source/modules/gcmd/gcmd.c **** 
 169              		.loc 1 43 15 view .LVU33
 170 001a 0B4B     		ldr	r3, .L20+4
 171 001c 1868     		ldr	r0, [r3]
 172              	.LVL13:
  43:source/modules/gcmd/gcmd.c **** 
 173              		.loc 1 43 15 view .LVU34
 174 001e FFF7FEFF 		bl	hm_get
 175              	.LVL14:
  45:source/modules/gcmd/gcmd.c ****         // no such control number
 176              		.loc 1 45 5 is_stmt 1 view .LVU35
  45:source/modules/gcmd/gcmd.c ****         // no such control number
 177              		.loc 1 45 7 is_stmt 0 view .LVU36
 178 0022 0146     		mov	r1, r0
 179 0024 50B1     		cbz	r0, .L14
  51:source/modules/gcmd/gcmd.c **** 
 180              		.loc 1 51 5 is_stmt 1 view .LVU37
  51:source/modules/gcmd/gcmd.c **** 
 181              		.loc 1 51 12 is_stmt 0 view .LVU38
 182 0026 074A     		ldr	r2, .L20
 183 0028 1368     		ldr	r3, [r2]
 184 002a 0133     		adds	r3, r3, #1
 185 002c 1360     		str	r3, [r2]
  53:source/modules/gcmd/gcmd.c ****     func(cmd->state);
 186              		.loc 1 53 5 is_stmt 1 view .LVU39
 187              	.LVL15:
  54:source/modules/gcmd/gcmd.c **** 
 188              		.loc 1 54 5 view .LVU40
 189 002e E088     		ldrh	r0, [r4, #6]
 190              	.LVL16:
  54:source/modules/gcmd/gcmd.c **** 
 191              		.loc 1 54 5 is_stmt 0 view .LVU41
 192 0030 8847     		blx	r1
 193              	.LVL17:
  56:source/modules/gcmd/gcmd.c **** }
 194              		.loc 1 56 5 is_stmt 1 view .LVU42
  56:source/modules/gcmd/gcmd.c **** }
 195              		.loc 1 56 12 is_stmt 0 view .LVU43
 196 0032 0120     		movs	r0, #1
 197 0034 EFE7     		b	.L10
 198              	.LVL18:
 199              	.L12:
 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 0
 202              		.cfi_restore 4
 203              		.cfi_restore 14
  33:source/modules/gcmd/gcmd.c ****     }
 204              		.loc 1 33 16 view .LVU44
 205 0036 4FF0FF30 		mov	r0, #-1
 206              	.LVL19:
ARM GAS  /tmp/ccCSnU0r.s 			page 6


 207              		.loc 1 57 1 view .LVU45
 208 003a 7047     		bx	lr
 209              	.LVL20:
 210              	.L14:
 211              	.LCFI6:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 4, -8
 214              		.cfi_offset 14, -4
  48:source/modules/gcmd/gcmd.c ****     }
 215              		.loc 1 48 16 view .LVU46
 216 003c 4FF0FF30 		mov	r0, #-1
 217              	.LVL21:
  48:source/modules/gcmd/gcmd.c ****     }
 218              		.loc 1 48 16 view .LVU47
 219 0040 E9E7     		b	.L10
 220              	.L21:
 221 0042 00BF     		.align	2
 222              	.L20:
 223 0044 00000000 		.word	.LANCHOR2
 224 0048 00000000 		.word	.LANCHOR0
 225              		.cfi_endproc
 226              	.LFE1:
 228              		.section	.bss.hm,"aw",%nobits
 229              		.align	2
 230              		.set	.LANCHOR0,. + 0
 233              	hm:
 234 0000 00000000 		.space	4
 235              		.section	.bss.seq_num,"aw",%nobits
 236              		.align	2
 237              		.set	.LANCHOR2,. + 0
 240              	seq_num:
 241 0000 00000000 		.space	4
 242              		.section	.rodata.gcmd_list,"a"
 243              		.align	2
 244              		.set	.LANCHOR1,. + 0
 247              	gcmd_list:
 248 0000 8403     		.short	900
 249 0002 0000     		.space	2
 250 0004 00000000 		.word	0
 251              		.text
 252              	.Letext0:
 253              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 254              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 255              		.file 4 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 256              		.file 5 "source/modules/gcmd/gcmd.h"
 257              		.file 6 "source/modules/gcmd/gcmd_conf.h"
 258              		.file 7 "source/modules/hashmap/hashmap.h"
ARM GAS  /tmp/ccCSnU0r.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 gcmd.c
     /tmp/ccCSnU0r.s:18     .text.gcmd_init:0000000000000000 $t
     /tmp/ccCSnU0r.s:26     .text.gcmd_init:0000000000000000 gcmd_init
     /tmp/ccCSnU0r.s:114    .text.gcmd_init:000000000000004c $d
     /tmp/ccCSnU0r.s:121    .text.gcmd_parse:0000000000000000 $t
     /tmp/ccCSnU0r.s:128    .text.gcmd_parse:0000000000000000 gcmd_parse
     /tmp/ccCSnU0r.s:223    .text.gcmd_parse:0000000000000044 $d
     /tmp/ccCSnU0r.s:229    .bss.hm:0000000000000000 $d
     /tmp/ccCSnU0r.s:233    .bss.hm:0000000000000000 hm
     /tmp/ccCSnU0r.s:236    .bss.seq_num:0000000000000000 $d
     /tmp/ccCSnU0r.s:240    .bss.seq_num:0000000000000000 seq_num
     /tmp/ccCSnU0r.s:243    .rodata.gcmd_list:0000000000000000 $d
     /tmp/ccCSnU0r.s:247    .rodata.gcmd_list:0000000000000000 gcmd_list

UNDEFINED SYMBOLS
hm_create
hm_add
hm_get
