ARM GAS  /tmp/ccWffmXn.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ts.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ts_add,"ax",%progbits
  18              		.align	1
  19              		.global	ts_add
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	ts_add:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "source/modules/scheduler/ts.c"
   1:source/modules/scheduler/ts.c **** /*
   2:source/modules/scheduler/ts.c **** /   Tiny Scheduler
   3:source/modules/scheduler/ts.c **** /
   4:source/modules/scheduler/ts.c **** /   Will Merges 2021
   5:source/modules/scheduler/ts.c **** */
   6:source/modules/scheduler/ts.c **** #include "ts.h"
   7:source/modules/scheduler/ts.c **** #include <string.h>
   8:source/modules/scheduler/ts.c **** 
   9:source/modules/scheduler/ts.c **** // task pointers
  10:source/modules/scheduler/ts.c **** tiny_task_t* tasks[TS_MAX_TASKS];
  11:source/modules/scheduler/ts.c **** 
  12:source/modules/scheduler/ts.c **** // mark a ttid, used = 1, unused = 0
  13:source/modules/scheduler/ts.c **** unsigned char ttid_map[TS_MAX_TASKS];
  14:source/modules/scheduler/ts.c **** 
  15:source/modules/scheduler/ts.c **** int ts_add(tiny_task_t* task) {
  30              		.loc 1 15 31 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 15 31 is_stmt 0 view .LVU1
  36 0000 0246     		mov	r2, r0
  16:source/modules/scheduler/ts.c ****     // find a free ttid
  17:source/modules/scheduler/ts.c ****     for(int i = 0; i < TS_MAX_TASKS; i++) {
  37              		.loc 1 17 5 is_stmt 1 view .LVU2
  38              	.LBB2:
  39              		.loc 1 17 9 view .LVU3
  40              	.LVL1:
  41              		.loc 1 17 13 is_stmt 0 view .LVU4
ARM GAS  /tmp/ccWffmXn.s 			page 2


  42 0002 0020     		movs	r0, #0
  43              	.LVL2:
  44              	.L2:
  45              		.loc 1 17 22 is_stmt 1 discriminator 1 view .LVU5
  46 0004 1328     		cmp	r0, #19
  47 0006 0EDC     		bgt	.L6
  18:source/modules/scheduler/ts.c ****         if(ttid_map[i] == 0) {
  48              		.loc 1 18 9 view .LVU6
  49              		.loc 1 18 20 is_stmt 0 view .LVU7
  50 0008 084B     		ldr	r3, .L8
  51 000a 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
  52              		.loc 1 18 11 view .LVU8
  53 000c 0BB1     		cbz	r3, .L7
  17:source/modules/scheduler/ts.c ****         if(ttid_map[i] == 0) {
  54              		.loc 1 17 39 is_stmt 1 discriminator 2 view .LVU9
  55 000e 0130     		adds	r0, r0, #1
  56              	.LVL3:
  17:source/modules/scheduler/ts.c ****         if(ttid_map[i] == 0) {
  57              		.loc 1 17 39 is_stmt 0 discriminator 2 view .LVU10
  58 0010 F8E7     		b	.L2
  59              	.L7:
  19:source/modules/scheduler/ts.c ****             task->priority = task->default_priority;
  60              		.loc 1 19 13 is_stmt 1 view .LVU11
  61              		.loc 1 19 34 is_stmt 0 view .LVU12
  62 0012 137A     		ldrb	r3, [r2, #8]	@ zero_extendqisi2
  63              		.loc 1 19 28 view .LVU13
  64 0014 5372     		strb	r3, [r2, #9]
  20:source/modules/scheduler/ts.c ****             task->ttid = i;
  65              		.loc 1 20 13 is_stmt 1 view .LVU14
  66              		.loc 1 20 24 is_stmt 0 view .LVU15
  67 0016 1060     		str	r0, [r2]
  21:source/modules/scheduler/ts.c ****             ttid_map[i] = 1;
  68              		.loc 1 21 13 is_stmt 1 view .LVU16
  69              		.loc 1 21 25 is_stmt 0 view .LVU17
  70 0018 044B     		ldr	r3, .L8
  71 001a 0121     		movs	r1, #1
  72 001c 1954     		strb	r1, [r3, r0]
  22:source/modules/scheduler/ts.c ****             tasks[i] = task;
  73              		.loc 1 22 13 is_stmt 1 view .LVU18
  74              		.loc 1 22 22 is_stmt 0 view .LVU19
  75 001e 044B     		ldr	r3, .L8+4
  76 0020 43F82020 		str	r2, [r3, r0, lsl #2]
  23:source/modules/scheduler/ts.c ****             return i;
  77              		.loc 1 23 13 is_stmt 1 view .LVU20
  78              		.loc 1 23 20 is_stmt 0 view .LVU21
  79 0024 7047     		bx	lr
  80              	.L6:
  81              		.loc 1 23 20 view .LVU22
  82              	.LBE2:
  24:source/modules/scheduler/ts.c ****         }
  25:source/modules/scheduler/ts.c ****     }
  26:source/modules/scheduler/ts.c ****     return TS_ERR_TTID; // no ttid's available
  83              		.loc 1 26 12 view .LVU23
  84 0026 4FF0FF30 		mov	r0, #-1
  85              	.LVL4:
  27:source/modules/scheduler/ts.c **** }
  86              		.loc 1 27 1 view .LVU24
ARM GAS  /tmp/ccWffmXn.s 			page 3


  87 002a 7047     		bx	lr
  88              	.L9:
  89              		.align	2
  90              	.L8:
  91 002c 00000000 		.word	.LANCHOR0
  92 0030 00000000 		.word	.LANCHOR1
  93              		.cfi_endproc
  94              	.LFE0:
  96              		.section	.text.ts_rem,"ax",%progbits
  97              		.align	1
  98              		.global	ts_rem
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu fpv4-sp-d16
 104              	ts_rem:
 105              	.LVL5:
 106              	.LFB1:
  28:source/modules/scheduler/ts.c **** 
  29:source/modules/scheduler/ts.c **** void ts_rem(int ttid) {
 107              		.loc 1 29 23 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
  30:source/modules/scheduler/ts.c ****     // bounds check
  31:source/modules/scheduler/ts.c ****     if(ttid < 0 || ttid >= TS_MAX_TASKS) {
 112              		.loc 1 31 5 view .LVU26
 113              		.loc 1 31 7 is_stmt 0 view .LVU27
 114 0000 1328     		cmp	r0, #19
 115 0002 00D9     		bls	.L12
 116              	.L10:
  32:source/modules/scheduler/ts.c ****         return;
  33:source/modules/scheduler/ts.c ****     }
  34:source/modules/scheduler/ts.c ****     // clear and mark unused
  35:source/modules/scheduler/ts.c ****     memset(tasks + ttid, 0, sizeof(tiny_task_t*));
  36:source/modules/scheduler/ts.c ****     ttid_map[ttid] = 0;
  37:source/modules/scheduler/ts.c **** }
 117              		.loc 1 37 1 view .LVU28
 118 0004 7047     		bx	lr
 119              	.L12:
  35:source/modules/scheduler/ts.c ****     ttid_map[ttid] = 0;
 120              		.loc 1 35 5 is_stmt 1 view .LVU29
 121 0006 0023     		movs	r3, #0
 122 0008 024A     		ldr	r2, .L13
 123 000a 42F82030 		str	r3, [r2, r0, lsl #2]	@ unaligned
  36:source/modules/scheduler/ts.c **** }
 124              		.loc 1 36 5 view .LVU30
  36:source/modules/scheduler/ts.c **** }
 125              		.loc 1 36 20 is_stmt 0 view .LVU31
 126 000e 024A     		ldr	r2, .L13+4
 127 0010 1354     		strb	r3, [r2, r0]
 128 0012 F7E7     		b	.L10
 129              	.L14:
 130              		.align	2
 131              	.L13:
 132 0014 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccWffmXn.s 			page 4


 133 0018 00000000 		.word	.LANCHOR0
 134              		.cfi_endproc
 135              	.LFE1:
 137              		.section	.text.ts_schedule,"ax",%progbits
 138              		.align	1
 139              		.global	ts_schedule
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	ts_schedule:
 146              	.LVL6:
 147              	.LFB2:
  38:source/modules/scheduler/ts.c **** 
  39:source/modules/scheduler/ts.c **** // not all that great of time complexity,  ¯\_(ツ)_/¯
  40:source/modules/scheduler/ts.c **** void ts_schedule(int* stop_var, int stop_cond) {
 148              		.loc 1 40 48 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 40 48 is_stmt 0 view .LVU33
 153 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 154              	.LCFI0:
 155              		.cfi_def_cfa_offset 20
 156              		.cfi_offset 4, -20
 157              		.cfi_offset 5, -16
 158              		.cfi_offset 6, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 83B0     		sub	sp, sp, #12
 162              	.LCFI1:
 163              		.cfi_def_cfa_offset 32
 164 0004 0E46     		mov	r6, r1
  41:source/modules/scheduler/ts.c ****     int dummy = 1;
 165              		.loc 1 41 5 is_stmt 1 view .LVU34
 166              		.loc 1 41 9 is_stmt 0 view .LVU35
 167 0006 0123     		movs	r3, #1
 168 0008 0193     		str	r3, [sp, #4]
  42:source/modules/scheduler/ts.c ****     if(stop_var == NULL) {
 169              		.loc 1 42 5 is_stmt 1 view .LVU36
 170              		.loc 1 42 7 is_stmt 0 view .LVU37
 171 000a 0746     		mov	r7, r0
 172 000c 28B1     		cbz	r0, .L26
 173              	.L16:
 174              	.LVL7:
  43:source/modules/scheduler/ts.c ****         stop_var = &dummy;
  44:source/modules/scheduler/ts.c ****         stop_cond = 0; // just loop forever
  45:source/modules/scheduler/ts.c ****     }
  46:source/modules/scheduler/ts.c **** 
  47:source/modules/scheduler/ts.c ****     long int curr_time = ts_systime();
 175              		.loc 1 47 5 is_stmt 1 view .LVU38
 176              		.loc 1 47 26 is_stmt 0 view .LVU39
 177 000e FFF7FEFF 		bl	ts_systime
 178              	.LVL8:
 179 0012 0446     		mov	r4, r0
 180              	.LVL9:
  48:source/modules/scheduler/ts.c ****     long int best_ttid = -1;
ARM GAS  /tmp/ccWffmXn.s 			page 5


 181              		.loc 1 48 5 is_stmt 1 view .LVU40
  49:source/modules/scheduler/ts.c ****     while(*stop_var != stop_cond) {
 182              		.loc 1 49 5 view .LVU41
  48:source/modules/scheduler/ts.c ****     long int best_ttid = -1;
 183              		.loc 1 48 14 is_stmt 0 view .LVU42
 184 0014 4FF0FF35 		mov	r5, #-1
 185              		.loc 1 49 10 view .LVU43
 186 0018 2EE0     		b	.L17
 187              	.LVL10:
 188              	.L26:
  44:source/modules/scheduler/ts.c ****     }
 189              		.loc 1 44 19 view .LVU44
 190 001a 0026     		movs	r6, #0
  43:source/modules/scheduler/ts.c ****         stop_cond = 0; // just loop forever
 191              		.loc 1 43 18 view .LVU45
 192 001c 01AF     		add	r7, sp, #4
 193 001e F6E7     		b	.L16
 194              	.LVL11:
 195              	.L28:
 196              	.LBB3:
  50:source/modules/scheduler/ts.c ****         while(curr_time == ts_systime()) {}; // spinning is okay here, we have nothing better to do
  51:source/modules/scheduler/ts.c ****         curr_time = ts_systime();
  52:source/modules/scheduler/ts.c ****         for(size_t i = 0; i < TS_MAX_TASKS; i++) {
  53:source/modules/scheduler/ts.c ****             if(ttid_map[i] == 1) {
  54:source/modules/scheduler/ts.c ****                 if(tasks[i]->priority == SLEEP_PRIORITY) {
  55:source/modules/scheduler/ts.c ****                     continue; // skip sleeping tasks
  56:source/modules/scheduler/ts.c ****                 }
  57:source/modules/scheduler/ts.c ****                 if(tasks[i]->start_time < curr_time) {
  58:source/modules/scheduler/ts.c ****                     if(best_ttid == -1) {
  59:source/modules/scheduler/ts.c ****                         best_ttid = i;
 197              		.loc 1 59 25 is_stmt 1 view .LVU46
 198              		.loc 1 59 35 is_stmt 0 view .LVU47
 199 0020 1D46     		mov	r5, r3
 200              	.LVL12:
 201              	.L20:
  52:source/modules/scheduler/ts.c ****             if(ttid_map[i] == 1) {
 202              		.loc 1 52 46 is_stmt 1 discriminator 2 view .LVU48
 203 0022 0133     		adds	r3, r3, #1
 204              	.LVL13:
 205              	.L19:
  52:source/modules/scheduler/ts.c ****             if(ttid_map[i] == 1) {
 206              		.loc 1 52 29 discriminator 1 view .LVU49
 207 0024 132B     		cmp	r3, #19
 208 0026 19D8     		bhi	.L27
  53:source/modules/scheduler/ts.c ****                 if(tasks[i]->priority == SLEEP_PRIORITY) {
 209              		.loc 1 53 13 view .LVU50
  53:source/modules/scheduler/ts.c ****                 if(tasks[i]->priority == SLEEP_PRIORITY) {
 210              		.loc 1 53 24 is_stmt 0 view .LVU51
 211 0028 1A4A     		ldr	r2, .L30
 212 002a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
  53:source/modules/scheduler/ts.c ****                 if(tasks[i]->priority == SLEEP_PRIORITY) {
 213              		.loc 1 53 15 view .LVU52
 214 002c 012A     		cmp	r2, #1
 215 002e F8D1     		bne	.L20
  54:source/modules/scheduler/ts.c ****                     continue; // skip sleeping tasks
 216              		.loc 1 54 17 is_stmt 1 view .LVU53
  54:source/modules/scheduler/ts.c ****                     continue; // skip sleeping tasks
ARM GAS  /tmp/ccWffmXn.s 			page 6


 217              		.loc 1 54 25 is_stmt 0 view .LVU54
 218 0030 194A     		ldr	r2, .L30+4
 219 0032 52F82320 		ldr	r2, [r2, r3, lsl #2]
  54:source/modules/scheduler/ts.c ****                     continue; // skip sleeping tasks
 220              		.loc 1 54 28 view .LVU55
 221 0036 517A     		ldrb	r1, [r2, #9]	@ zero_extendqisi2
  54:source/modules/scheduler/ts.c ****                     continue; // skip sleeping tasks
 222              		.loc 1 54 19 view .LVU56
 223 0038 0129     		cmp	r1, #1
 224 003a F2D0     		beq	.L20
  57:source/modules/scheduler/ts.c ****                     if(best_ttid == -1) {
 225              		.loc 1 57 17 is_stmt 1 view .LVU57
  57:source/modules/scheduler/ts.c ****                     if(best_ttid == -1) {
 226              		.loc 1 57 28 is_stmt 0 view .LVU58
 227 003c 5268     		ldr	r2, [r2, #4]
  57:source/modules/scheduler/ts.c ****                     if(best_ttid == -1) {
 228              		.loc 1 57 19 view .LVU59
 229 003e A242     		cmp	r2, r4
 230 0040 EFDA     		bge	.L20
  58:source/modules/scheduler/ts.c ****                         best_ttid = i;
 231              		.loc 1 58 21 is_stmt 1 view .LVU60
  58:source/modules/scheduler/ts.c ****                         best_ttid = i;
 232              		.loc 1 58 23 is_stmt 0 view .LVU61
 233 0042 B5F1FF3F 		cmp	r5, #-1
 234 0046 EBD0     		beq	.L28
  60:source/modules/scheduler/ts.c ****                     } else if(tasks[i]->priority > tasks[best_ttid]->priority) {
 235              		.loc 1 60 28 is_stmt 1 view .LVU62
 236              		.loc 1 60 57 is_stmt 0 view .LVU63
 237 0048 134A     		ldr	r2, .L30+4
 238 004a 52F82500 		ldr	r0, [r2, r5, lsl #2]
 239              		.loc 1 60 68 view .LVU64
 240 004e 427A     		ldrb	r2, [r0, #9]	@ zero_extendqisi2
 241              		.loc 1 60 30 view .LVU65
 242 0050 9142     		cmp	r1, r2
 243 0052 E6D9     		bls	.L20
  61:source/modules/scheduler/ts.c ****                         tasks[best_ttid]->priority++; // NOTE: not checking for overflow here! Bewa
 244              		.loc 1 61 25 is_stmt 1 view .LVU66
 245              		.loc 1 61 51 is_stmt 0 view .LVU67
 246 0054 0132     		adds	r2, r2, #1
 247 0056 4272     		strb	r2, [r0, #9]
  62:source/modules/scheduler/ts.c ****                         best_ttid = i;
 248              		.loc 1 62 25 is_stmt 1 view .LVU68
 249              		.loc 1 62 35 is_stmt 0 view .LVU69
 250 0058 1D46     		mov	r5, r3
 251              	.LVL14:
 252              		.loc 1 62 35 view .LVU70
 253 005a E2E7     		b	.L20
 254              	.LVL15:
 255              	.L27:
 256              		.loc 1 62 35 view .LVU71
 257              	.LBE3:
  63:source/modules/scheduler/ts.c ****                     }
  64:source/modules/scheduler/ts.c ****                 }
  65:source/modules/scheduler/ts.c ****             }
  66:source/modules/scheduler/ts.c ****         }
  67:source/modules/scheduler/ts.c ****         if(best_ttid != -1) {
 258              		.loc 1 67 9 is_stmt 1 view .LVU72
ARM GAS  /tmp/ccWffmXn.s 			page 7


 259              		.loc 1 67 11 is_stmt 0 view .LVU73
 260 005c B5F1FF3F 		cmp	r5, #-1
 261 0060 0AD0     		beq	.L17
  68:source/modules/scheduler/ts.c ****             // change the priority BEFORE calling the task so it can change it's own priority
  69:source/modules/scheduler/ts.c ****             tasks[best_ttid]->priority = tasks[best_ttid]->default_priority;
 262              		.loc 1 69 13 is_stmt 1 view .LVU74
 263              		.loc 1 69 47 is_stmt 0 view .LVU75
 264 0062 0D4B     		ldr	r3, .L30+4
 265              	.LVL16:
 266              		.loc 1 69 47 view .LVU76
 267 0064 53F82520 		ldr	r2, [r3, r5, lsl #2]
 268              		.loc 1 69 58 view .LVU77
 269 0068 117A     		ldrb	r1, [r2, #8]	@ zero_extendqisi2
 270              		.loc 1 69 40 view .LVU78
 271 006a 5172     		strb	r1, [r2, #9]
  70:source/modules/scheduler/ts.c ****             tasks[best_ttid]->task(tasks[best_ttid]);
 272              		.loc 1 70 13 is_stmt 1 view .LVU79
 273              		.loc 1 70 18 is_stmt 0 view .LVU80
 274 006c 53F82500 		ldr	r0, [r3, r5, lsl #2]
 275              		.loc 1 70 29 view .LVU81
 276 0070 C368     		ldr	r3, [r0, #12]
 277              		.loc 1 70 13 view .LVU82
 278 0072 9847     		blx	r3
 279              	.LVL17:
  71:source/modules/scheduler/ts.c ****             best_ttid = -1;
 280              		.loc 1 71 13 is_stmt 1 view .LVU83
 281              		.loc 1 71 23 is_stmt 0 view .LVU84
 282 0074 4FF0FF35 		mov	r5, #-1
 283              	.LVL18:
 284              	.L17:
  49:source/modules/scheduler/ts.c ****         while(curr_time == ts_systime()) {}; // spinning is okay here, we have nothing better to do
 285              		.loc 1 49 21 is_stmt 1 view .LVU85
  49:source/modules/scheduler/ts.c ****         while(curr_time == ts_systime()) {}; // spinning is okay here, we have nothing better to do
 286              		.loc 1 49 11 is_stmt 0 view .LVU86
 287 0078 3B68     		ldr	r3, [r7]
  49:source/modules/scheduler/ts.c ****         while(curr_time == ts_systime()) {}; // spinning is okay here, we have nothing better to do
 288              		.loc 1 49 21 view .LVU87
 289 007a B342     		cmp	r3, r6
 290 007c 08D0     		beq	.L29
 291              	.L18:
  50:source/modules/scheduler/ts.c ****         curr_time = ts_systime();
 292              		.loc 1 50 43 is_stmt 1 discriminator 1 view .LVU88
  50:source/modules/scheduler/ts.c ****         curr_time = ts_systime();
 293              		.loc 1 50 25 discriminator 1 view .LVU89
  50:source/modules/scheduler/ts.c ****         curr_time = ts_systime();
 294              		.loc 1 50 28 is_stmt 0 discriminator 1 view .LVU90
 295 007e FFF7FEFF 		bl	ts_systime
 296              	.LVL19:
  50:source/modules/scheduler/ts.c ****         curr_time = ts_systime();
 297              		.loc 1 50 25 discriminator 1 view .LVU91
 298 0082 A042     		cmp	r0, r4
 299 0084 FBD0     		beq	.L18
  50:source/modules/scheduler/ts.c ****         curr_time = ts_systime();
 300              		.loc 1 50 44 is_stmt 1 discriminator 2 view .LVU92
  51:source/modules/scheduler/ts.c ****         for(size_t i = 0; i < TS_MAX_TASKS; i++) {
 301              		.loc 1 51 9 discriminator 2 view .LVU93
  51:source/modules/scheduler/ts.c ****         for(size_t i = 0; i < TS_MAX_TASKS; i++) {
ARM GAS  /tmp/ccWffmXn.s 			page 8


 302              		.loc 1 51 21 is_stmt 0 discriminator 2 view .LVU94
 303 0086 FFF7FEFF 		bl	ts_systime
 304              	.LVL20:
 305 008a 0446     		mov	r4, r0
 306              	.LVL21:
  52:source/modules/scheduler/ts.c ****             if(ttid_map[i] == 1) {
 307              		.loc 1 52 9 is_stmt 1 discriminator 2 view .LVU95
 308              	.LBB4:
  52:source/modules/scheduler/ts.c ****             if(ttid_map[i] == 1) {
 309              		.loc 1 52 13 discriminator 2 view .LVU96
  52:source/modules/scheduler/ts.c ****             if(ttid_map[i] == 1) {
 310              		.loc 1 52 20 is_stmt 0 discriminator 2 view .LVU97
 311 008c 0023     		movs	r3, #0
  52:source/modules/scheduler/ts.c ****             if(ttid_map[i] == 1) {
 312              		.loc 1 52 9 discriminator 2 view .LVU98
 313 008e C9E7     		b	.L19
 314              	.LVL22:
 315              	.L29:
  52:source/modules/scheduler/ts.c ****             if(ttid_map[i] == 1) {
 316              		.loc 1 52 9 discriminator 2 view .LVU99
 317              	.LBE4:
  72:source/modules/scheduler/ts.c ****         }
  73:source/modules/scheduler/ts.c ****     }
  74:source/modules/scheduler/ts.c **** }
 318              		.loc 1 74 1 view .LVU100
 319 0090 03B0     		add	sp, sp, #12
 320              	.LCFI2:
 321              		.cfi_def_cfa_offset 20
 322              		@ sp needed
 323 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 324              	.LVL23:
 325              	.L31:
 326              		.loc 1 74 1 view .LVU101
 327              		.align	2
 328              	.L30:
 329 0094 00000000 		.word	.LANCHOR0
 330 0098 00000000 		.word	.LANCHOR1
 331              		.cfi_endproc
 332              	.LFE2:
 334              		.global	ttid_map
 335              		.global	tasks
 336              		.section	.bss.tasks,"aw",%nobits
 337              		.align	2
 338              		.set	.LANCHOR1,. + 0
 341              	tasks:
 342 0000 00000000 		.space	80
 342      00000000 
 342      00000000 
 342      00000000 
 342      00000000 
 343              		.section	.bss.ttid_map,"aw",%nobits
 344              		.align	2
 345              		.set	.LANCHOR0,. + 0
 348              	ttid_map:
 349 0000 00000000 		.space	20
 349      00000000 
 349      00000000 
ARM GAS  /tmp/ccWffmXn.s 			page 9


 349      00000000 
 349      00000000 
 350              		.text
 351              	.Letext0:
 352              		.file 2 "source/modules/scheduler/ts.h"
 353              		.file 3 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 354              		.file 4 "/usr/arm-none-eabi/include/string.h"
ARM GAS  /tmp/ccWffmXn.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ts.c
     /tmp/ccWffmXn.s:18     .text.ts_add:0000000000000000 $t
     /tmp/ccWffmXn.s:26     .text.ts_add:0000000000000000 ts_add
     /tmp/ccWffmXn.s:91     .text.ts_add:000000000000002c $d
     /tmp/ccWffmXn.s:97     .text.ts_rem:0000000000000000 $t
     /tmp/ccWffmXn.s:104    .text.ts_rem:0000000000000000 ts_rem
     /tmp/ccWffmXn.s:132    .text.ts_rem:0000000000000014 $d
     /tmp/ccWffmXn.s:138    .text.ts_schedule:0000000000000000 $t
     /tmp/ccWffmXn.s:145    .text.ts_schedule:0000000000000000 ts_schedule
     /tmp/ccWffmXn.s:329    .text.ts_schedule:0000000000000094 $d
     /tmp/ccWffmXn.s:348    .bss.ttid_map:0000000000000000 ttid_map
     /tmp/ccWffmXn.s:341    .bss.tasks:0000000000000000 tasks
     /tmp/ccWffmXn.s:337    .bss.tasks:0000000000000000 $d
     /tmp/ccWffmXn.s:344    .bss.ttid_map:0000000000000000 $d

UNDEFINED SYMBOLS
ts_systime
